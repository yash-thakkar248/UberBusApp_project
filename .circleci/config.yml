version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.8.3
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Zip files
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            sudo apt-get update -y
            sudo apt-get install -y less
            ls -al
      - run:
          name : Docker Operations
          command: |
            echo "LOG IN COMPLETED" | docker login -u=$DockerUsername -p=$DockerPassword
            ls -al
            docker build -f uber-backend/Dockerfile -t $DockerUsername/uberbusapp:backend .
            docker push $DockerUsername/uberbusapp:backend
      - run:
          name: Install KubeCtl
          command: |
            curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
            kubectl version --short --client
      - run:
          name: Install AWS-Auth
          command: |
            cd ~
            curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - run:
          name: Configuring Kubectl
          command: |
            aws eks update-kubeconfig --name terraform-eks-demo --region us-east-1 --role-arn arn:aws:iam::508165821329:user/circleci
            cp config ~/.kube/config-raw
            kubectl apply -f config-map-aws-auth.yml
            sleep 10
            kubectl get nodes
            # cd back-end/
            # kubectl apply -f be-uber-deployment.yaml
            # sleep 10
            # kubectl get deployments
            # kubectl apply -f be-uber-service.yaml
            # sleep 10
            # kubectl get svc